{"mappings":"AAAA;AAEA,MAAM,OAAO,SAAS,aAAa,CAAC;AAEpC,SAAS,eAAe,GAAG;IACzB,OAAO,SAAS,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC;AAChD;AAEA,SAAS,SAAS,GAAG;IACnB,MAAM,UAAU;WAAI,IAAI,QAAQ;KAAC,CAAC,IAAI,CACpC,CAAC,OAAO,QACN,eAAe,MAAM,OAAO,CAAC,MAAM,IACnC,eAAe,MAAM,OAAO,CAAC,MAAM;IAGvC,OAAO,QAAQ,OAAO,CAAC,CAAC,MAAQ,IAAI,OAAO,CAAC;AAC9C;AAEA,SAAS,aAAa,KAAK;IACzB,MAAM,SAAS,EAAE;IAEjB,KAAK,MAAM,OAAO;WAAI,MAAM,QAAQ;KAAC,CAAE;QACrC,MAAM,YAAY;YAChB,MAAM,IAAI,SAAS;YACnB,YAAY,IAAI,OAAO,CAAC,QAAQ;YAChC,QAAQ,IAAI,OAAO,CAAC,MAAM;YAC1B,KAAK,IAAI,OAAO,CAAC,GAAG;QACtB;QAEA,OAAO,IAAI,CAAC;IACd;IAEA,OAAO;AACT;AAEA,iDAAiD;AAEjD,qCAAqC;AACrC,uDAAuD;AACvD,IAAI;AAEJ,6BAA6B;AAC7B,qDAAqD;AAErD,yCAAyC;AACzC,wEAAwE;AACxE,QAAQ;AAER,uEAAuE;AACvE,IAAI;AAEJ,gCAAgC;AAChC,yDAAyD;AACzD,mBAAmB;AACnB,+BAA+B;AAC/B,0CAA0C;AAC1C,gCAAgC;AAChC,sCAAsC;AACtC,UAAU;AAEV,oBAAoB;AACpB,YAAY;AACZ,IAAI;AAEJ,SAAS;AACT,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\n\nfunction transformInNum(str) {\n  return parseInt(str.split(',').join('').slice(1));\n}\n\nfunction sortList(arr) {\n  const newList = [...arr.children].sort(\n    (elem1, elem2) =>\n      transformInNum(elem1.dataset.salary) -\n      transformInNum(elem2.dataset.salary),\n  );\n\n  return newList.forEach((obj) => arr.prepend(obj));\n}\n\nfunction getEmployees(array) {\n  const result = [];\n\n  for (const obj of [...array.children]) {\n    const simpleObj = {\n      name: obj.innerText,\n      positition: obj.dataset.position,\n      salary: obj.dataset.salary,\n      age: obj.dataset.age,\n    };\n\n    result.push(simpleObj);\n  }\n\n  return result;\n}\n\n// const pageList = document.querySelector('ul');\n\n// function normalize(stringSalary) {\n//   return +stringSalary.split(',').join('').slice(1);\n// }\n\n// function sortList(array) {\n//   const copyEmployeesChilds = [...array.children];\n\n//   copyEmployeesChilds.sort((a, b) => {\n//     return normalize(b.dataset.salary) - normalize(a.dataset.salary);\n//   });\n\n//   copyEmployeesChilds.forEach((employee) => array.append(employee));\n// }\n\n// function getEmployees(list) {\n//   return [...list.children].reduce((array, child) => {\n//     array.push({\n//       name: child.innerText,\n//       position: child.dataset.position,\n//       age: child.dataset.age,\n//       salary: child.dataset.salary,\n//     });\n\n//     return array;\n//   }, []);\n// }\n\nsortList(list);\ngetEmployees(list);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}